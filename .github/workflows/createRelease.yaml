# .github/workflows/release_and_benchmark.yaml

name: Release and Benchmark Tests

on:
  push:
    branches: [master]
    paths:
      - 'build.py'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'cpusetup.py'
      - 'gpusetup.py'
      - 'README.md'
      - 'LICENSE'
      - 'tests/**'
      - 'scripts/**'
      - '.github/workflows/release_and_benchmark.yaml'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest  # Changed to Ubuntu for better compatibility

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Updated to the latest version

      - name: Set up Python
        uses: actions/setup-python@v4  # Updated to the latest version
        with:
          python-version: '3.12.7'

      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Get version from build.py
        id: get_version
        run: |
          VERSION=$(python -c "import build; print(build.VERSION)")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build the Packages
        run: |
          python build.py 

      - name: List dist contents
        run: |
          ls -la dist/

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body: "Automated release of version ${{ env.VERSION }}"
          draft: false
          prerelease: false
          artifacts: |
            dist/*.whl
            dist/*.tar.gz
        continue-on-error: true  # Retains the workflow even if this step fails

      - name: Publish to PyPI
        if: success()
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true  # Skip uploading if the package version already exists
          packages_dir: dist  # Directory where the built packages are located

      - name: Handle Existing Tag (Optional)
        if: failure()
        run: |
          echo "Release tag already exists or another error occurred. Skipping release creation."

  benchmark:
    needs: release  # Ensures that the 'release' job completes before 'benchmark' starts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]  # Test across multiple Python versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run Benchmark Tests
        run: |
          pytest tests/benchmarks/ --benchmark-only --benchmark-json=benchmark_results.json --html=benchmark_report.html

      - name: Install Matplotlib
        run: |
          pip install matplotlib

      - name: Generate Benchmark Plots and Update README
        run: |
          python scripts/update_readme_benchmarks.py benchmark_results.json README.md

      - name: Commit and Push Updated README
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com
          message: "Update README with latest benchmark results and plots [skip ci]"
          file_pattern: README.md

      - name: Upload Benchmark JSON Results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results-${{ matrix.python-version }}
          path: benchmark_results.json

      - name: Upload Benchmark HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-report-${{ matrix.python-version }}
          path: benchmark_report.html

      - name: Upload Benchmark Plots
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-plots-${{ matrix.python-version }}
          path: scripts/benchmarks/*.png  # Ensure plots are saved here
